{"ast":null,"code":"var _jsxFileName = \"/home/mvs/Splint_Photogrammetry/meshapp/frontend/src/components/Slideshow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport './Slideshow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slideshow = _ref => {\n  _s();\n  let {\n    images\n  } = _ref;\n  const [index, setIndex] = useState(0);\n  const timeoutRef = useRef(null);\n  const resetTimeout = () => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n  };\n  useEffect(() => {\n    resetTimeout();\n    timeoutRef.current = setTimeout(() => setIndex(prevIndex => prevIndex === images.length - 1 ? 0 : prevIndex + 1), 2500);\n    return () => {\n      resetTimeout();\n    };\n  }, [index, images.length]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slideshow\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slideshowSlider\",\n      style: {\n        transform: `translate3d(${-index * 100}%, 0, 0)`\n      },\n      children: images.map((src, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slide\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: src,\n          alt: `Slide ${idx}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slideshowDots\",\n      children: images.map((_, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `slideshowDot${index === idx ? \" active\" : \"\"}`,\n        onClick: () => {\n          setIndex(idx);\n        }\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Slideshow, \"bhtDMAuiTWjY/oCsgWcgDfz/cnA=\");\n_c = Slideshow;\nexport default Slideshow;\nvar _c;\n$RefreshReg$(_c, \"Slideshow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Slideshow","_ref","_s","images","index","setIndex","timeoutRef","resetTimeout","current","clearTimeout","setTimeout","prevIndex","length","className","children","style","transform","map","src","idx","alt","fileName","_jsxFileName","lineNumber","columnNumber","_","onClick","_c","$RefreshReg$"],"sources":["/home/mvs/Splint_Photogrammetry/meshapp/frontend/src/components/Slideshow.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport './Slideshow.css';\n\nconst Slideshow = ({ images }) => {\n    const [index, setIndex] = useState(0);\n    const timeoutRef = useRef(null);\n\n    const resetTimeout = () => {\n        if (timeoutRef.current) {\n          clearTimeout(timeoutRef.current);\n        }\n    };\n\n    useEffect(() => {\n        resetTimeout();\n        timeoutRef.current = setTimeout(\n          () =>\n            setIndex((prevIndex) =>\n              prevIndex === images.length - 1 ? 0 : prevIndex + 1\n            ),\n          2500\n        );\n        return () => {\n        resetTimeout();\n      };\n    }, [index, images.length]);\n\n    return (\n        <div className=\"slideshow\">\n          <div\n            className=\"slideshowSlider\"\n            style={{ transform: `translate3d(${-index * 100}%, 0, 0)` }}\n          >\n            {images.map((src, idx) => (\n              <div className=\"slide\" key={idx}>\n                <img src={src} alt={`Slide ${idx}`} />\n              </div>\n            ))}\n          </div>\n    \n          <div className=\"slideshowDots\">\n            {images.map((_, idx) => (\n              <div\n                key={idx}\n                className={`slideshowDot${index === idx ? \" active\" : \"\"}`}\n                onClick={() => {\n                  setIndex(idx);\n                }}\n              ></div>\n            ))}\n          </div>\n        </div>\n      );\n};\n\nexport default Slideshow;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAAEC;EAAO,CAAC,GAAAF,IAAA;EACzB,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMW,UAAU,GAAGT,MAAM,CAAC,IAAI,CAAC;EAE/B,MAAMU,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAID,UAAU,CAACE,OAAO,EAAE;MACtBC,YAAY,CAACH,UAAU,CAACE,OAAO,CAAC;IAClC;EACJ,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACZW,YAAY,CAAC,CAAC;IACdD,UAAU,CAACE,OAAO,GAAGE,UAAU,CAC7B,MACEL,QAAQ,CAAEM,SAAS,IACjBA,SAAS,KAAKR,MAAM,CAACS,MAAM,GAAG,CAAC,GAAG,CAAC,GAAGD,SAAS,GAAG,CACpD,CAAC,EACH,IACF,CAAC;IACD,OAAO,MAAM;MACbJ,YAAY,CAAC,CAAC;IAChB,CAAC;EACH,CAAC,EAAE,CAACH,KAAK,EAAED,MAAM,CAACS,MAAM,CAAC,CAAC;EAE1B,oBACIb,OAAA;IAAKc,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBf,OAAA;MACEc,SAAS,EAAC,iBAAiB;MAC3BE,KAAK,EAAE;QAAEC,SAAS,EAAG,eAAc,CAACZ,KAAK,GAAG,GAAI;MAAU,CAAE;MAAAU,QAAA,EAE3DX,MAAM,CAACc,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,kBACnBpB,OAAA;QAAKc,SAAS,EAAC,OAAO;QAAAC,QAAA,eACpBf,OAAA;UAAKmB,GAAG,EAAEA,GAAI;UAACE,GAAG,EAAG,SAAQD,GAAI;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADZL,GAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE1B,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENzB,OAAA;MAAKc,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BX,MAAM,CAACc,GAAG,CAAC,CAACQ,CAAC,EAAEN,GAAG,kBACjBpB,OAAA;QAEEc,SAAS,EAAG,eAAcT,KAAK,KAAKe,GAAG,GAAG,SAAS,GAAG,EAAG,EAAE;QAC3DO,OAAO,EAAEA,CAAA,KAAM;UACbrB,QAAQ,CAACc,GAAG,CAAC;QACf;MAAE,GAJGA,GAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKJ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd,CAAC;AAACtB,EAAA,CAlDIF,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAoDf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}