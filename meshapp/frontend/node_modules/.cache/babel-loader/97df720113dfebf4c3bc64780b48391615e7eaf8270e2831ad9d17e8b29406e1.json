{"ast":null,"code":"var _jsxFileName = \"/home/mvs/Splint_Photogrammetry/meshapp/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Header from './components/Header';\nimport './App.css';\nimport LoadingScreen from './components/LoadingScreen';\nimport Footer from './components/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Crear variables de estado para los siguientes procesos:\n  // Obtener/Manipular las imágenes\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [previews, setPreviews] = useState([]);\n\n  // Estados correspondientes a carga, procesado y finalización satisfactoria\n  // Previsiblemente, el usuario va a estar esperando en un ratio inversamente proporcional\n  // al poder de computación del servidor cloud. Por lo que he decidido\n  // crear diversas etapas para amenizar el proceso, visualmente.\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n\n  // Función -> Manejar la selección de archivos\n  const handleFileInputChange = e => {\n    const files = e.target.files;\n    if (files.length < 20) {\n      alert('Para que los resultados sean validos, deben ser al menos 20 imágenes');\n      return;\n    } else if (files.length > 20 && files.length < 40) {\n      alert('WARNING: Para resultados óptimos, el set deberá de tener entre 40-60 fotos');\n    }\n    setSelectedFiles(files);\n    setPreviews(Array.from(files).map(file => URL.createObjectURL(file)));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsProcessing(true);\n    const formData = new FormData();\n    for (const file of selectedFiles) {\n      formData.append('files', file);\n    }\n    try {\n      await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setIsSuccess(true);\n      setTimeout(() => {\n        setIsSuccess(false);\n        setIsProcessing(false);\n      }, 60000);\n    } catch (error) {\n      console.error('Error uploading files:', error);\n      setIsProcessing(false);\n      alert('An error occurred while processing the images. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"App-title\",\n      children: \"UC3M Meshroom 3D Conversion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      name: \"file\",\n      id: \"file\",\n      multiple: true,\n      onChange: handleFileInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      disabled: isProcessing || selectedFiles.length === 0,\n      children: isProcessing ? 'Processing...' : 'Upload Images'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ImageSlider, {\n      images: previews\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), isSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Success! Your 3D mesh has been generated and downloaded.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You will be redirected to the initial screen in a moment.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), isProcessing && /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"spgrNnvQSqdEfHwXzuNkC7BcsWM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","Header","LoadingScreen","Footer","jsxDEV","_jsxDEV","App","_s","selectedFiles","setSelectedFiles","previews","setPreviews","isProcessing","setIsProcessing","isSuccess","setIsSuccess","handleFileInputChange","e","files","target","length","alert","Array","from","map","file","URL","createObjectURL","handleSubmit","preventDefault","formData","FormData","append","post","headers","setTimeout","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","id","multiple","onChange","onClick","disabled","ImageSlider","images","_c","$RefreshReg$"],"sources":["/home/mvs/Splint_Photogrammetry/meshapp/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport Header from './components/Header';\nimport './App.css';\nimport LoadingScreen from './components/LoadingScreen';\nimport Footer from './components/Footer';\n\nfunction App() {\n    // Crear variables de estado para los siguientes procesos:\n    // Obtener/Manipular las imágenes\n    const [selectedFiles, setSelectedFiles] = useState([]);\n    const [previews, setPreviews] = useState([])\n\n    // Estados correspondientes a carga, procesado y finalización satisfactoria\n    // Previsiblemente, el usuario va a estar esperando en un ratio inversamente proporcional\n    // al poder de computación del servidor cloud. Por lo que he decidido\n    // crear diversas etapas para amenizar el proceso, visualmente.\n    const [isProcessing, setIsProcessing] = useState(false);\n    const [isSuccess, setIsSuccess] = useState(false);\n\n    // Función -> Manejar la selección de archivos\n    const handleFileInputChange = (e) => {\n        const files = e.target.files;\n\n        if (files.length < 20) {\n            alert('Para que los resultados sean validos, deben ser al menos 20 imágenes');\n            return;\n        }\n\n        else if (files.length > 20 && files.length < 40){\n          alert('WARNING: Para resultados óptimos, el set deberá de tener entre 40-60 fotos')\n        }\n\n        setSelectedFiles(files)\n        setPreviews(Array.from(files).map((file) => URL.createObjectURL(file)));\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        setIsProcessing(true);\n\n        const formData = new FormData();\n\n        for (const file of selectedFiles) {\n          formData.append('files', file);\n        }\n\n        try {\n          await axios.post('http://localhost:5000/upload', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n            },\n          });\n\n          setIsSuccess(true);\n          setTimeout(() => {\n            setIsSuccess(false);\n            setIsProcessing(false);\n          }, 60000);\n        } catch (error) {\n          console.error('Error uploading files:', error);\n          setIsProcessing(false);\n          alert('An error occurred while processing the images. Please try again.');\n        }\n    };\n    return (\n        <div className=\"App\">\n            <Header />\n            <h1 className=\"App-title\">UC3M Meshroom 3D Conversion</h1>\n            <input\n                type=\"file\"\n                name=\"file\"\n                id=\"file\"\n                multiple\n                onChange={handleFileInputChange}\n            />\n            <button onClick={handleSubmit} disabled={isProcessing || selectedFiles.length === 0}>\n                {isProcessing ? 'Processing...' : 'Upload Images'}\n            </button>\n            <ImageSlider images={previews} />\n        {isSuccess && (\n            <div className=\"success-message\">\n                <p>Success! Your 3D mesh has been generated and downloaded.</p>\n                <p>You will be redirected to the initial screen in a moment.</p>\n            </div>\n        )}\n        {isProcessing && <LoadingScreen />}\n        <Footer />\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}